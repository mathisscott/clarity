{"version":3,"file":"nav.element.js","sourceRoot":"","sources":["../../../src/nav/nav.element.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,MAAM,aAAa,CAAC;AACtD,OAAO,EAAE,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAEjD;;;;;;;GAOG;AACH,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,YAAY,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAC;AAK7F,MAAM,OAAO,MAAO,SAAQ,UAAU;IAAtC;;QAqB+B,aAAQ,GAAG,IAAI,CAAC;IAkN/C,CAAC;IAtOC,MAAM,KAAK,MAAM;QACf,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;IAC9B,CAAC;IAQD,YAAY,CAAC,KAAuB;QAClC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAE1B,IAAI,CAAC,uBAAuB,EAAE,CAAA;IAChC,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,0BAA0B,EAAE,CAAC;IACpC,CAAC;IAID,MAAM;QACJ,OAAO,IAAI,CAAA;;gDAEkC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAU,wCAAwC,IAAI,CAAC,MAAM;yBAC9G,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC,eAAe;+CACnC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAQ;;;8BAGnD,IAAI,CAAC,aAAa;;;KAG3C,CAAC;IACJ,CAAC;IAEO,aAAa;QACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7C,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC9B,MAAM,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;YAChD,IAAI,CAAC,QAAQ,KAAK,cAAc,IAAI,QAAQ,KAAK,eAAe,CAAC,IAAK,IAAiC,CAAC,YAAY,KAAK,IAAI,EAAE;gBAC5H,IAAiC,CAAC,YAAY,GAAG,IAAI,CAAC;aACxD;SACF;IACH,CAAC;IAEO,MAAM;QACZ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;IACnD,CAAC;IAEO,IAAI,CAAC,KAAa;QACxB,IAAI,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;IAC7C,CAAC;IAEO,uBAAuB;QAC7B,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;IACzD,CAAC;IAEO,0BAA0B;QAChC,IAAI,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;IAC5D,CAAC;IAED,IAAI,cAAc;QAChB,OAAO,QAAQ,CAAC,aAAa,CAAC;IAChC,CAAC;IAED,IAAI,kBAAkB;QACpB,OAAO,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACvD,CAAC;IAED,mBAAmB,CAAC,IAAoB;QACtC,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,CAAC,YAAY,EAAE;YAC/C,OAAO,SAAS,CAAC;SAClB;QAED,IAAI,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO,CAAC,WAAW,EAAE,MAAK,eAAe,KAAI,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,SAAS,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAA,EAAE;YAC/F,OAAO,eAAe,CAAC;SACxB;QAED,IAAI,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO,CAAC,WAAW,EAAE,MAAK,cAAc,EAAE;YAClD,OAAO,cAAc,CAAC;SACvB;QAED,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,IAAI,mBAAmB;QACrB,MAAM,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC;QACvC,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,IAAI,CAAC,YAAY,EAAE;YAC3D,OAAO,CAAC,CAAC,CAAC;SACX;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnD,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YAEtC,IAAI,MAAM,KAAK,UAAU,EAAE;gBACzB,OAAO,CAAC,CAAC;aACV;YAED,IAAI,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,eAAe,IAAI,UAAU,KAAM,MAAsB,CAAC,WAAW,EAAE;gBAC1G,OAAO,CAAC,CAAC;aACV;SACF;QAED,OAAO,CAAC,CAAC,CAAC;IACZ,CAAC;IAEO,eAAe,CAAC,GAAkB;QACzC,QAAQ,CAAC,CAAC,YAAY,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE;;YAChC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,MAAM,aAAa,GAAG,IAAI,CAAC,kBAAkB,CAAC;YAE9C,IAAI,aAAa,KAAK,SAAS,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,EAAE;gBACzD,IAAI,CAAC,MAAM,EAAE,CAAC;aACf;iBAAM,IAAI,aAAa,KAAK,eAAe,IAAK,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,mBAAmB,CAAiB,CAAC,QAAQ,KAAK,OAAO,EAAE;gBACnI,MAAM,MAAM,GAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,mBAAmB,CAAiB,CAAC,YAAY,CAAC;gBAC3F,MAAM,YAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;gBAEtD,IAAI,YAAY,KAAK,SAAS,EAAE;oBAC7B,MAAiB,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;iBACzC;qBAAM,IAAI,YAAY,KAAK,eAAe,EAAE;oBAC3C,MAAE,MAAsB,CAAC,WAAyB,0CAAE,KAAK,EAAE,CAAC;iBAC7D;aACF;iBAAM,IAAI,aAAa,KAAK,cAAc,EAAE;gBAC3C,MAAM,MAAM,GAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,mBAAmB,CAAgB,CAAC,YAAY,CAAC;gBAC1F,MAAM,YAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;gBAEtD,IAAI,YAAY,KAAK,SAAS,EAAE;oBAC7B,MAAiB,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;iBACzC;qBAAM,IAAI,YAAY,KAAK,eAAe,EAAE;oBAC3C,MAAE,MAAsB,CAAC,WAAyB,0CAAE,KAAK,EAAE,CAAC;iBAC7D;aACF;iBAAM,IAAI,aAAa,KAAK,eAAe,EAAE;gBAC5C,MAAM,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,mBAAmB,CAAgB,CAAC;gBACnF,IAAI,aAAa,CAAC,QAAQ,KAAK,MAAM,EAAE;oBACrC,aAAa,CAAC,MAAM,EAAE,CAAC;iBACxB;aACF;YAED,SAAS,CAAC,GAAG,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;QAEJ,QAAQ,CAAC,CAAC,aAAa,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE;YACjC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACrB,MAAM,aAAa,GAAG,IAAI,CAAC,kBAAkB,CAAC;YAE9C,IAAI,aAAa,KAAK,SAAS,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,EAAE;gBAC1D,IAAI,CAAC,MAAM,EAAE,CAAC;aACf;iBAAM,IAAI,aAAa,KAAK,eAAe,EAAE;gBAC5C,MAAM,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,mBAAmB,CAAgB,CAAC;gBACnF,IAAI,aAAa,CAAC,QAAQ,KAAK,OAAO,EAAE;oBACtC,aAAa,CAAC,MAAM,EAAE,CAAC;iBACxB;aACF;YAED,SAAS,CAAC,GAAG,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE;;YAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,MAAM,YAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC;YAE9C,IAAI,YAAY,KAAK,CAAC,EAAE;gBACtB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;aAC3B;iBAAM;gBACL,MAAM,SAAS,GAAG,YAAY,GAAG,CAAC,CAAC;gBACnC,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;gBACnD,MAAM,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC;gBAE1D,IAAI,CAAC,WAAW,EAAE;oBAChB,OAAO;iBACR;qBAAM,IAAI,WAAW,KAAK,eAAe,EAAE;oBAC1C,MAAC,MAAC,WAA2B,0CAAE,WAAyB,0CAAE,KAAK,EAAE,CAAC;iBACnE;qBAAM,IAAI,WAAW,KAAK,cAAc,EAAE;oBACzC,WAAW,CAAC,KAAK,EAAE,CAAC;iBACrB;aACF;YAED,SAAS,CAAC,GAAG,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,CAAC,YAAY,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE;;YACjC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAEpB,MAAM,YAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC;YAE9C,IAAI,YAAY,KAAK,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnD,OAAO;aACR;iBAAM;gBACL,MAAM,SAAS,GAAG,YAAY,GAAG,CAAC,CAAC;gBACnC,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;gBACnD,MAAM,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC;gBAE1D,IAAI,CAAC,WAAW,EAAE;oBAChB,OAAO;iBACR;qBAAM,IAAI,WAAW,KAAK,eAAe,EAAE;oBAC1C,MAAC,MAAC,WAA2B,0CAAE,WAAyB,0CAAE,KAAK,EAAE,CAAC;iBACnE;qBAAM,IAAI,WAAW,KAAK,cAAc,EAAE;oBACzC,WAAW,CAAC,KAAK,EAAE,CAAC;iBACrB;aACF;YAED,SAAS,CAAC,GAAG,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE;YAC3B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAEpB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;YAE1B,SAAS,CAAC,GAAG,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE;;YAC1B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAEnB,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;YACvE,MAAM,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC;YAE1D,IAAI,CAAC,WAAW,EAAE;gBAChB,OAAO;aACR;iBAAM,IAAI,WAAW,KAAK,eAAe,EAAE;gBAC1C,MAAC,MAAC,WAA2B,0CAAE,WAAyB,0CAAE,KAAK,EAAE,CAAC;aACnE;iBAAM,IAAI,WAAW,KAAK,cAAc,EAAE;gBACzC,WAAW,CAAC,KAAK,EAAE,CAAC;aACrB;YAED,SAAS,CAAC,GAAG,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AAjOC;IADC,KAAK,CAAC,YAAY,CAAC;4CACF;AAGlB;IADC,YAAY,CAAC,iFAAiF,CAAC;8CAC5E;AAYS;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;wCAAiB","sourcesContent":["import { html, LitElement, query } from 'lit-element';\nimport { styles } from './nav.element.styles.js';\n\n/**\n * @internal\n * Base styles are currently an internal API not subject to semver updates.\n *\n * The base styles provide styles for core components that use shadow DOM.\n * Components using the base styles are required to have the global clarity\n * core styles loaded in the window.\n */\nimport { baseStyles, onAnyKey, property, querySlotAll, stopEvent } from '@cds/core/internal';\nimport { CdaNavGroup } from '../nav-group/nav-group.element.js';\nimport { CdsButton } from '@cds/core/button';\nimport { CdaNavItem } from '../nav-item/nav-item.element.js';\n\nexport class CdaNav extends LitElement {\n  static get styles() {\n    return [baseStyles, styles];\n  }\n\n  @query('.nav-title')\n  navTopButton: any;\n\n  @querySlotAll('cda-nav-group:not([aria-hidden=\"true\"]), cda-nav-item:not([aria-hidden=\"true\"])')\n  navigableItems: any;\n\n  firstUpdated(props: Map<string, any>) {\n    super.firstUpdated(props);\n\n    this.setupKeyboardNavigation()\n  }\n\n  disconnectedCallback() {\n    this.tearDownKeyboardNavigation();\n  }\n\n  @property({ type: Boolean }) expanded = true;\n\n  render() {\n    return html`\n      <div cds-layout=\"vertical gap:sm p-b:lg\">\n        <cds-button class=\"nav-title\" action=\"${ this.expanded ? 'solid' : 'outline' }\" block style=\"display:block\" @click=${this.toggle}>\n          <span style=\"${ this.expanded ? 'display: inline-block' : 'display: none'}\"><slot name=\"title\"></slot></span>\n          <cds-icon shape=\"angle\" direction=\"${ this.expanded ? 'left' : 'right' }\"></cds-icon>\n        </cds-button>\n        <div class=\"nav\" cds-layout=\"p-x:lg align:left vertical gap:sm\">\n          <slot @slotchange=${this.setUpChildren}></slot>\n        </div>\n      </div>\n    `;\n  }\n\n  private setUpChildren() {\n    for (let i = 0; i < this.children.length; i++) {\n      const item = this.children[i];\n      const itemType = this.findFocusedItemType(item);\n      if ((itemType === 'cda-nav-item' || itemType === 'cda-nav-group') && (item as CdaNavGroup | CdaNavItem)._parentGroup === null) {\n        (item as CdaNavGroup | CdaNavItem)._parentGroup = this;\n      }\n    }\n  }\n\n  private toggle() {\n    this.emit(this.expanded ? 'collapse' : 'expand');\n  }\n\n  private emit(value: string) {\n    this.dispatchEvent(new CustomEvent(value));\n  }\n\n  private setupKeyboardNavigation() {\n    this.addEventListener('keydown', this.handleKeyEvents);\n  }\n\n  private tearDownKeyboardNavigation() {\n    this.removeEventListener('keydown', this.handleKeyEvents);\n  }\n\n  get currentFocused() {\n    return document.activeElement;\n  }\n\n  get currentFocusedType() {\n    return this.findFocusedItemType(this.currentFocused);\n  }\n\n  findFocusedItemType(item: Element | null) {\n    if (item === this || item === this.navTopButton) {\n      return 'cda-nav';\n    }\n\n    if (item?.tagName.toLowerCase() === 'cda-nav-group' || item?.classList.contains('navgroup-btn')) {\n      return 'cda-nav-group';\n    }\n\n    if (item?.tagName.toLowerCase() === 'cda-nav-item') {\n      return 'cda-nav-item';\n    }\n\n    return '';\n  }\n\n  get currentFocusedIndex(): number {\n    const nowFocused = this.currentFocused;\n    if (nowFocused === this || nowFocused === this.navTopButton) {\n      return -1;\n    }\n\n    for (var i = 0; i < this.navigableItems.length; i++) {\n      const myItem = this.navigableItems[i];\n\n      if (myItem === nowFocused) {\n        return i;\n      }\n\n      if (myItem.tagName.toLowerCase() === 'cda-nav-group' && nowFocused === (myItem as CdaNavGroup).navGroupBtn) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  private handleKeyEvents(evt: KeyboardEvent) {\n   onAnyKey(['arrow-left'], evt, () => {\n      console.log('left');\n      const typeOfFocused = this.currentFocusedType;\n      \n      if (typeOfFocused === 'cda-nav' && this.expanded === true) {\n        this.toggle();\n      } else if (typeOfFocused === 'cda-nav-group' && (this.navigableItems[this.currentFocusedIndex] as CdaNavGroup).expanded === 'false') {\n        const parent = (this.navigableItems[this.currentFocusedIndex] as CdaNavGroup)._parentGroup;\n        const typeOfParent = this.findFocusedItemType(parent);\n\n        if (typeOfParent === 'cda-nav') {\n          (parent as CdaNav).navTopButton.focus();\n        } else if (typeOfParent === 'cda-nav-group') {\n          ((parent as CdaNavGroup).navGroupBtn as CdsButton)?.focus();\n        } \n      } else if (typeOfFocused === 'cda-nav-item') {\n        const parent = (this.navigableItems[this.currentFocusedIndex] as CdaNavItem)._parentGroup;\n        const typeOfParent = this.findFocusedItemType(parent);\n\n        if (typeOfParent === 'cda-nav') {\n          (parent as CdaNav).navTopButton.focus();\n        } else if (typeOfParent === 'cda-nav-group') {\n          ((parent as CdaNavGroup).navGroupBtn as CdsButton)?.focus();\n        } \n      } else if (typeOfFocused === 'cda-nav-group') {\n        const whatIsFocused = this.navigableItems[this.currentFocusedIndex] as CdaNavGroup;\n        if (whatIsFocused.expanded === 'true') {\n          whatIsFocused.toggle();\n        }\n      }\n\n      stopEvent(evt);\n    });\n\n   onAnyKey(['arrow-right'], evt, () => {\n      console.log('right');\n      const typeOfFocused = this.currentFocusedType;\n      \n      if (typeOfFocused === 'cda-nav' && this.expanded === false) {\n        this.toggle();\n      } else if (typeOfFocused === 'cda-nav-group') {\n        const whatIsFocused = this.navigableItems[this.currentFocusedIndex] as CdaNavGroup;\n        if (whatIsFocused.expanded === 'false') {\n          whatIsFocused.toggle();\n        }\n      }\n\n      stopEvent(evt);\n    });\n\n    onAnyKey(['arrow-up'], evt, () => {\n      console.log('up');\n      const currentIndex = this.currentFocusedIndex;\n\n      if (currentIndex === 0) {\n        this.navTopButton.focus();\n      } else {\n        const prevIndex = currentIndex - 1;\n        const itemToFocus = this.navigableItems[prevIndex];\n        const whatToFocus = this.findFocusedItemType(itemToFocus);\n\n        if (!whatToFocus) {\n          return;\n        } else if (whatToFocus === 'cda-nav-group') {\n          ((itemToFocus as CdaNavGroup)?.navGroupBtn as CdsButton)?.focus();\n        } else if (whatToFocus === 'cda-nav-item') {\n          itemToFocus.focus();\n        }\n      }\n\n      stopEvent(evt);\n    });\n\n    onAnyKey(['arrow-down'], evt, () => {\n      console.log('down');\n\n      const currentIndex = this.currentFocusedIndex;\n\n      if (currentIndex === this.navigableItems.length - 1) {\n        return;\n      } else {\n        const nextIndex = currentIndex + 1;\n        const itemToFocus = this.navigableItems[nextIndex];\n        const whatToFocus = this.findFocusedItemType(itemToFocus);\n\n        if (!whatToFocus) {\n          return;\n        } else if (whatToFocus === 'cda-nav-group') {\n          ((itemToFocus as CdaNavGroup)?.navGroupBtn as CdsButton)?.focus();\n        } else if (whatToFocus === 'cda-nav-item') {\n          itemToFocus.focus();\n        }\n      }\n\n      stopEvent(evt);\n    });\n\n    onAnyKey(['home'], evt, () => {\n      console.log('home');\n      \n      this.navTopButton.focus();\n\n      stopEvent(evt);\n    });\n\n    onAnyKey(['end'], evt, () => {\n      console.log('end');\n\n      const itemToFocus = this.navigableItems[this.navigableItems.length - 1]\n      const whatToFocus = this.findFocusedItemType(itemToFocus);\n\n      if (!whatToFocus) {\n        return;\n      } else if (whatToFocus === 'cda-nav-group') {\n        ((itemToFocus as CdaNavGroup)?.navGroupBtn as CdsButton)?.focus();\n      } else if (whatToFocus === 'cda-nav-item') {\n        itemToFocus.focus();\n      }\n\n      stopEvent(evt);\n    });\n  }\n}\n"]}