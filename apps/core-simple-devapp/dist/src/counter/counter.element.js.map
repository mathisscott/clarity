{"version":3,"file":"counter.element.js","sourceRoot":"","sources":["../../../src/counter/counter.element.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AACzD,OAAO,EAAE,MAAM,EAAE,MAAM,6BAA6B,CAAC;AAErD;;;;;;;GAOG;AACH,OAAO,EAAE,UAAU,EAAE,MAAM,oBAAoB,CAAC;AAEhD,MAAM,OAAO,UAAW,SAAQ,UAAU;IAA1C;;QAK8B,UAAK,GAAG,CAAC,CAAC;IA8BxC,CAAC;IAlCC,MAAM,KAAK,MAAM;QACf,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;IAC9B,CAAC;IAID,MAAM;QACJ,OAAO,IAAI,CAAA;;;;mBAII,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;;;;;;cAMjC,IAAI,CAAC,KAAK;;;;;;mBAML,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;;;;;KAK1C,CAAC;IACJ,CAAC;IAEO,IAAI,CAAC,KAAa;QACxB,IAAI,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;IAC7C,CAAC;CACF;AA9B6B;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;yCAAW","sourcesContent":["import { html, LitElement, property } from 'lit-element';\nimport { styles } from './counter.element.styles.js';\n\n/**\n * @internal\n * Base styles are currently an internal API not subject to semver updates.\n *\n * The base styles provide styles for core components that use shadow DOM.\n * Components using the base styles are required to have the global clarity\n * core styles loaded in the window.\n */\nimport { baseStyles } from '@cds/core/internal';\n\nexport class CdaCounter extends LitElement {\n  static get styles() {\n    return [baseStyles, styles];\n  }\n\n  @property({ type: Number }) value = 0;\n\n  render() {\n    return html`\n      <div cds-layout=\"horizontal gap:md align:center\">\n        <cds-icon-button\n          aria-label=\"decrement\"\n          @click=${() => this.emit('decrement')}\n        >\n          <cds-icon shape=\"minus\"></cds-icon>\n        </cds-icon-button>\n        <div class=\"value\">\n          <p cds-text=\"subsection center\">\n            ${this.value}\n            <slot></slot>\n          </p>\n        </div>\n        <cds-icon-button\n          aria-label=\"increment\"\n          @click=${() => this.emit('increment')}\n        >\n          <cds-icon shape=\"plus\"></cds-icon>\n        </cds-icon-button>\n      </div>\n    `;\n  }\n\n  private emit(value: string) {\n    this.dispatchEvent(new CustomEvent(value));\n  }\n}\n"]}